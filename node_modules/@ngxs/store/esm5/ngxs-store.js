/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * Generated bundle index. Do not edit.
 */
export { NgxsModule, Action, Store, State, Select, SelectorOptions, Actions, getSelectorMetadata, getStoreMetadata, ensureStoreMetadata, ensureSelectorMetadata, ofAction, ofActionDispatched, ofActionSuccessful, ofActionCanceled, ofActionErrored, ofActionCompleted, NgxsSimpleChange, Selector, getActionTypeFromInstance, actionMatcher, createSelector, NoopNgxsExecutionStrategy, StateToken, NGXS_PLUGINS, StateStream, setValue, getValue, InitState, UpdateState } from './index';
export { InternalActions as ɵb, OrderedSubject as ɵa } from './src/actions-stream';
export { SelectFactory as ɵs } from './src/decorators/select/select-factory';
export { InternalNgxsExecutionStrategy as ɵq } from './src/execution/internal-ngxs-execution-strategy';
export { NGXS_EXECUTION_STRATEGY as ɵi, USER_PROVIDED_NGXS_EXECUTION_STRATEGY as ɵh } from './src/execution/symbols';
export { InternalDispatchedActionResults as ɵl, InternalDispatcher as ɵm } from './src/internal/dispatcher';
export { InternalErrorReporter as ɵr } from './src/internal/error-handler';
export { ensureSelectorMetadata as ɵw, ensureStoreMetadata as ɵu, getSelectorMetadata as ɵx, getStoreMetadata as ɵv } from './src/internal/internals';
export { LifecycleStateManager as ɵy } from './src/internal/lifecycle-state-manager';
export { StateContextFactory as ɵn } from './src/internal/state-context-factory';
export { StateFactory as ɵk } from './src/internal/state-factory';
export { InternalStateOperations as ɵo } from './src/internal/state-operations';
export { NgxsFeatureModule as ɵz } from './src/modules/ngxs-feature.module';
export { NgxsRootModule as ɵj } from './src/modules/ngxs-root.module';
export { PluginManager as ɵp } from './src/plugin-manager';
export { FEATURE_STATE_TOKEN as ɵd, NgxsConfig as ɵf, ROOT_STATE_TOKEN as ɵc, SELECTOR_META_KEY as ɵe } from './src/symbols';
export { mergeDeep as ɵg } from './src/utils/utils';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4cy1zdG9yZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BuZ3hzL3N0b3JlLyIsInNvdXJjZXMiOlsibmd4cy1zdG9yZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBSUEsbWRBQWMsU0FBUyxDQUFDO0FBRXhCLE9BQU8sRUFBQyxlQUFlLElBQUksRUFBRSxFQUFDLGNBQWMsSUFBSSxFQUFFLEVBQUMsTUFBTSxzQkFBc0IsQ0FBQztBQUNoRixPQUFPLEVBQUMsYUFBYSxJQUFJLEVBQUUsRUFBQyxNQUFNLHdDQUF3QyxDQUFDO0FBQzNFLE9BQU8sRUFBQyw2QkFBNkIsSUFBSSxFQUFFLEVBQUMsTUFBTSxrREFBa0QsQ0FBQztBQUNyRyxPQUFPLEVBQUMsdUJBQXVCLElBQUksRUFBRSxFQUFDLHFDQUFxQyxJQUFJLEVBQUUsRUFBQyxNQUFNLHlCQUF5QixDQUFDO0FBQ2xILE9BQU8sRUFBQywrQkFBK0IsSUFBSSxFQUFFLEVBQUMsa0JBQWtCLElBQUksRUFBRSxFQUFDLE1BQU0sMkJBQTJCLENBQUM7QUFDekcsT0FBTyxFQUFDLHFCQUFxQixJQUFJLEVBQUUsRUFBQyxNQUFNLDhCQUE4QixDQUFDO0FBQ3pFLE9BQU8sRUFBMEIsc0JBQXNCLElBQUksRUFBRSxFQUFDLG1CQUFtQixJQUFJLEVBQUUsRUFBQyxtQkFBbUIsSUFBSSxFQUFFLEVBQUMsZ0JBQWdCLElBQUksRUFBRSxFQUFDLE1BQU0sMEJBQTBCLENBQUM7QUFDMUssT0FBTyxFQUFDLHFCQUFxQixJQUFJLEVBQUUsRUFBQyxNQUFNLHdDQUF3QyxDQUFDO0FBQ25GLE9BQU8sRUFBQyxtQkFBbUIsSUFBSSxFQUFFLEVBQUMsTUFBTSxzQ0FBc0MsQ0FBQztBQUMvRSxPQUFPLEVBQUMsWUFBWSxJQUFJLEVBQUUsRUFBQyxNQUFNLDhCQUE4QixDQUFDO0FBQ2hFLE9BQU8sRUFBQyx1QkFBdUIsSUFBSSxFQUFFLEVBQUMsTUFBTSxpQ0FBaUMsQ0FBQztBQUM5RSxPQUFPLEVBQUMsaUJBQWlCLElBQUksRUFBRSxFQUFDLE1BQU0sbUNBQW1DLENBQUM7QUFDMUUsT0FBTyxFQUFDLGNBQWMsSUFBSSxFQUFFLEVBQUMsTUFBTSxnQ0FBZ0MsQ0FBQztBQUNwRSxPQUFPLEVBQUMsYUFBYSxJQUFJLEVBQUUsRUFBQyxNQUFNLHNCQUFzQixDQUFDO0FBRXpELE9BQU8sRUFBQyxtQkFBbUIsSUFBSSxFQUFFLEVBQUMsVUFBVSxJQUFJLEVBQUUsRUFBQyxnQkFBZ0IsSUFBSSxFQUFFLEVBQUMsaUJBQWlCLElBQUksRUFBRSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ3hILE9BQU8sRUFBQyxTQUFTLElBQUksRUFBRSxFQUFDLE1BQU0sbUJBQW1CLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEdlbmVyYXRlZCBidW5kbGUgaW5kZXguIERvIG5vdCBlZGl0LlxuICovXG5cbmV4cG9ydCAqIGZyb20gJy4vaW5kZXgnO1xuXG5leHBvcnQge0ludGVybmFsQWN0aW9ucyBhcyDJtWIsT3JkZXJlZFN1YmplY3QgYXMgybVhfSBmcm9tICcuL3NyYy9hY3Rpb25zLXN0cmVhbSc7XG5leHBvcnQge1NlbGVjdEZhY3RvcnkgYXMgybVzfSBmcm9tICcuL3NyYy9kZWNvcmF0b3JzL3NlbGVjdC9zZWxlY3QtZmFjdG9yeSc7XG5leHBvcnQge0ludGVybmFsTmd4c0V4ZWN1dGlvblN0cmF0ZWd5IGFzIMm1cX0gZnJvbSAnLi9zcmMvZXhlY3V0aW9uL2ludGVybmFsLW5neHMtZXhlY3V0aW9uLXN0cmF0ZWd5JztcbmV4cG9ydCB7TkdYU19FWEVDVVRJT05fU1RSQVRFR1kgYXMgybVpLFVTRVJfUFJPVklERURfTkdYU19FWEVDVVRJT05fU1RSQVRFR1kgYXMgybVofSBmcm9tICcuL3NyYy9leGVjdXRpb24vc3ltYm9scyc7XG5leHBvcnQge0ludGVybmFsRGlzcGF0Y2hlZEFjdGlvblJlc3VsdHMgYXMgybVsLEludGVybmFsRGlzcGF0Y2hlciBhcyDJtW19IGZyb20gJy4vc3JjL2ludGVybmFsL2Rpc3BhdGNoZXInO1xuZXhwb3J0IHtJbnRlcm5hbEVycm9yUmVwb3J0ZXIgYXMgybVyfSBmcm9tICcuL3NyYy9pbnRlcm5hbC9lcnJvci1oYW5kbGVyJztcbmV4cG9ydCB7U3RhdGVDbGFzc0ludGVybmFsIGFzIMm1dCxlbnN1cmVTZWxlY3Rvck1ldGFkYXRhIGFzIMm1dyxlbnN1cmVTdG9yZU1ldGFkYXRhIGFzIMm1dSxnZXRTZWxlY3Rvck1ldGFkYXRhIGFzIMm1eCxnZXRTdG9yZU1ldGFkYXRhIGFzIMm1dn0gZnJvbSAnLi9zcmMvaW50ZXJuYWwvaW50ZXJuYWxzJztcbmV4cG9ydCB7TGlmZWN5Y2xlU3RhdGVNYW5hZ2VyIGFzIMm1eX0gZnJvbSAnLi9zcmMvaW50ZXJuYWwvbGlmZWN5Y2xlLXN0YXRlLW1hbmFnZXInO1xuZXhwb3J0IHtTdGF0ZUNvbnRleHRGYWN0b3J5IGFzIMm1bn0gZnJvbSAnLi9zcmMvaW50ZXJuYWwvc3RhdGUtY29udGV4dC1mYWN0b3J5JztcbmV4cG9ydCB7U3RhdGVGYWN0b3J5IGFzIMm1a30gZnJvbSAnLi9zcmMvaW50ZXJuYWwvc3RhdGUtZmFjdG9yeSc7XG5leHBvcnQge0ludGVybmFsU3RhdGVPcGVyYXRpb25zIGFzIMm1b30gZnJvbSAnLi9zcmMvaW50ZXJuYWwvc3RhdGUtb3BlcmF0aW9ucyc7XG5leHBvcnQge05neHNGZWF0dXJlTW9kdWxlIGFzIMm1en0gZnJvbSAnLi9zcmMvbW9kdWxlcy9uZ3hzLWZlYXR1cmUubW9kdWxlJztcbmV4cG9ydCB7Tmd4c1Jvb3RNb2R1bGUgYXMgybVqfSBmcm9tICcuL3NyYy9tb2R1bGVzL25neHMtcm9vdC5tb2R1bGUnO1xuZXhwb3J0IHtQbHVnaW5NYW5hZ2VyIGFzIMm1cH0gZnJvbSAnLi9zcmMvcGx1Z2luLW1hbmFnZXInO1xuZXhwb3J0IHtUb2tlbk5hbWUgYXMgybViYX0gZnJvbSAnLi9zcmMvc3RhdGUtdG9rZW4vc3ltYm9scyc7XG5leHBvcnQge0ZFQVRVUkVfU1RBVEVfVE9LRU4gYXMgybVkLE5neHNDb25maWcgYXMgybVmLFJPT1RfU1RBVEVfVE9LRU4gYXMgybVjLFNFTEVDVE9SX01FVEFfS0VZIGFzIMm1ZX0gZnJvbSAnLi9zcmMvc3ltYm9scyc7XG5leHBvcnQge21lcmdlRGVlcCBhcyDJtWd9IGZyb20gJy4vc3JjL3V0aWxzL3V0aWxzJzsiXX0=