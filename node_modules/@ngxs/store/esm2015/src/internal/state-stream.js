/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { BehaviorSubject } from 'rxjs';
/**
 * BehaviorSubject of the entire state.
 * @ignore
 */
export class StateStream extends BehaviorSubject {
    constructor() {
        super({});
    }
    /**
     * @return {?}
     */
    ngOnDestroy() {
        // The `StateStream` should never emit values once the root view is removed, e.g. when the `NgModuleRef.destroy()` is called.
        // This will eliminate memory leaks in server-side rendered apps where the `StateStream` is created per each HTTP request, users
        // might forget to unsubscribe from `store.select` or `store.subscribe`, thus this will lead to huge memory leaks in SSR apps.
        this.complete();
    }
}
StateStream.decorators = [
    { type: Injectable }
];
/** @nocollapse */
StateStream.ctorParameters = () => [];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RhdGUtc3RyZWFtLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQG5neHMvc3RvcmUvIiwic291cmNlcyI6WyJzcmMvaW50ZXJuYWwvc3RhdGUtc3RyZWFtLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFhLE1BQU0sZUFBZSxDQUFDO0FBQ3RELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxNQUFNLENBQUM7Ozs7O0FBU3ZDLE1BQU0sT0FBTyxXQUFZLFNBQVEsZUFBNEI7SUFDM0Q7UUFDRSxLQUFLLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDWixDQUFDOzs7O0lBRUQsV0FBVztRQUNULDZIQUE2SDtRQUM3SCxnSUFBZ0k7UUFDaEksOEhBQThIO1FBQzlILElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQztJQUNsQixDQUFDOzs7WUFYRixVQUFVIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSwgT25EZXN0cm95IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBCZWhhdmlvclN1YmplY3QgfSBmcm9tICdyeGpzJztcblxuaW1wb3J0IHsgUGxhaW5PYmplY3QgfSBmcm9tICdAbmd4cy9zdG9yZS9pbnRlcm5hbHMnO1xuXG4vKipcbiAqIEJlaGF2aW9yU3ViamVjdCBvZiB0aGUgZW50aXJlIHN0YXRlLlxuICogQGlnbm9yZVxuICovXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgU3RhdGVTdHJlYW0gZXh0ZW5kcyBCZWhhdmlvclN1YmplY3Q8UGxhaW5PYmplY3Q+IGltcGxlbWVudHMgT25EZXN0cm95IHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoe30pO1xuICB9XG5cbiAgbmdPbkRlc3Ryb3koKTogdm9pZCB7XG4gICAgLy8gVGhlIGBTdGF0ZVN0cmVhbWAgc2hvdWxkIG5ldmVyIGVtaXQgdmFsdWVzIG9uY2UgdGhlIHJvb3QgdmlldyBpcyByZW1vdmVkLCBlLmcuIHdoZW4gdGhlIGBOZ01vZHVsZVJlZi5kZXN0cm95KClgIGlzIGNhbGxlZC5cbiAgICAvLyBUaGlzIHdpbGwgZWxpbWluYXRlIG1lbW9yeSBsZWFrcyBpbiBzZXJ2ZXItc2lkZSByZW5kZXJlZCBhcHBzIHdoZXJlIHRoZSBgU3RhdGVTdHJlYW1gIGlzIGNyZWF0ZWQgcGVyIGVhY2ggSFRUUCByZXF1ZXN0LCB1c2Vyc1xuICAgIC8vIG1pZ2h0IGZvcmdldCB0byB1bnN1YnNjcmliZSBmcm9tIGBzdG9yZS5zZWxlY3RgIG9yIGBzdG9yZS5zdWJzY3JpYmVgLCB0aHVzIHRoaXMgd2lsbCBsZWFkIHRvIGh1Z2UgbWVtb3J5IGxlYWtzIGluIFNTUiBhcHBzLlxuICAgIHRoaXMuY29tcGxldGUoKTtcbiAgfVxufVxuIl19